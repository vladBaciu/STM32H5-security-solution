#!/bin/bash

absolutpath() {
  echo "$(cd "$(dirname "$1")" && pwd)"
}

# Environment variables for log files
thispath=$(absolutpath $0)

error_config()
{
  printf "${RED}"
  echo
  echo "====="
  if [ -z $1 ]; then
  echo "===== Error occurred in Helper/update_config.sh script."
  else
  echo "===== Error occurred in Helper/update_config.sh script. ($1)"
  fi
  echo "====="
  exit 1
}

# Getting the Trusted Package Creator and STM32CubeProgammer CLI path
if [[ -z $stm32programmercli ]] || [[ -z $stm32tpccli ]] || [[ -z $cube_fw_path ]] || [[ -z $projectdir ]]; then
  if [ -e "$thispath/../../env.sh" ]; then
    source $thispath/../../env.sh
  else
    error_config "env.sh missing"
  fi
fi

echo "Generated by sh"

# Environment variable for AppliCfg
unset AppliCfg
applicfg_path="$cube_fw_path/Utilities/PC_Software/ROT_AppliConfig/"
uname | grep -i -e windows -e mingw
if [ $? == 0 ]; then
  #line for window executable
  if [ -e "$applicfg_path/dist/AppliCfg.exe" ]; then
    AppliCfg="$applicfg_path/dist/AppliCfg.exe"
  fi
fi
if [[ -z $AppliCfg ]]; then
  #determine/check python version command
  if [ -e "$applicfg_path/AppliCfg.py" ]; then
    [ ${-/x} != ${-} ] && AppliCfg="python3 -t $applicfg_path/AppliCfg.py" || AppliCfg="python3 $applicfg_path/AppliCfg.py"
  else
    error_config "AppliCfg missing"
  fi
fi

# Flash layout files
flash_layout_bin="$projectdir/SM/Binary/FlashLayoutConfigs.bin"
xml_config_gen="$projectdir/SM/Config/SM_Config_General.xml"

# Get effective flash layout

$AppliCfg xmlval -b $flash_layout_bin -b_el_idx 0  -nxml_el_idx "Flash Layout configuration index" -n "Nb Secure Modules" $xml_config_gen --vb
if [ $? -ne 0 ]; then error_config 0; fi
$AppliCfg xmlval -b $flash_layout_bin -b_el_idx 4  -nxml_el_idx "Flash Layout configuration index" -n "S Module 0 primary offset" $xml_config_gen --vb
if [ $? -ne 0 ]; then error_config 4; fi
$AppliCfg xmlval -b $flash_layout_bin -b_el_idx 5  -nxml_el_idx "Flash Layout configuration index" -n "S Module 0 secondary offset" $xml_config_gen --vb
if [ $? -ne 0 ]; then error_config 5; fi
$AppliCfg xmlval -b $flash_layout_bin -b_el_idx 6  -nxml_el_idx "Flash Layout configuration index" -n "S Module 0 size" $xml_config_gen --vb
if [ $? -ne 0 ]; then error_config 6; fi
$AppliCfg xmlval -b $flash_layout_bin -b_el_idx 7  -nxml_el_idx "Flash Layout configuration index" -n "S Module 1 primary offset" $xml_config_gen --vb
if [ $? -ne 0 ]; then error_config 7; fi
$AppliCfg xmlval -b $flash_layout_bin -b_el_idx 8  -nxml_el_idx "Flash Layout configuration index" -n "S Module 1 secondary offset" $xml_config_gen --vb
if [ $? -ne 0 ]; then error_config 8; fi
$AppliCfg xmlval -b $flash_layout_bin -b_el_idx 9  -nxml_el_idx "Flash Layout configuration index" -n "S Module 1 size" $xml_config_gen --vb
if [ $? -ne 0 ]; then error_config 9; fi
$AppliCfg xmlval -b $flash_layout_bin -b_el_idx 10 -nxml_el_idx "Flash Layout configuration index" -n "S Module 2 primary offset" $xml_config_gen --vb
if [ $? -ne 0 ]; then error_config 10; fi
$AppliCfg xmlval -b $flash_layout_bin -b_el_idx 11 -nxml_el_idx "Flash Layout configuration index" -n "S Module 2 secondary offset" $xml_config_gen --vb
if [ $? -ne 0 ]; then error_config 11; fi
$AppliCfg xmlval -b $flash_layout_bin -b_el_idx 12 -nxml_el_idx "Flash Layout configuration index" -n "S Module 2 size" $xml_config_gen --vb
if [ $? -ne 0 ]; then error_config 12; fi
$AppliCfg xmlval -b $flash_layout_bin -b_el_idx 13 -nxml_el_idx "Flash Layout configuration index" -n "S Module 3 primary offset" $xml_config_gen --vb
if [ $? -ne 0 ]; then error_config 13; fi
$AppliCfg xmlval -b $flash_layout_bin -b_el_idx 14 -nxml_el_idx "Flash Layout configuration index" -n "S Module 3 secondary offset" $xml_config_gen --vb
if [ $? -ne 0 ]; then error_config 14; fi
$AppliCfg xmlval -b $flash_layout_bin -b_el_idx 15 -nxml_el_idx "Flash Layout configuration index" -n "S Module 3 size" $xml_config_gen --vb
if [ $? -ne 0 ]; then error_config 15; fi
$AppliCfg xmlval -b $flash_layout_bin -b_el_idx 16 -nxml_el_idx "Flash Layout configuration index" -n "S Module 4 primary offset" $xml_config_gen --vb
if [ $? -ne 0 ]; then error_config 16; fi
$AppliCfg xmlval -b $flash_layout_bin -b_el_idx 17 -nxml_el_idx "Flash Layout configuration index" -n "S Module 4 secondary offset" $xml_config_gen --vb
if [ $? -ne 0 ]; then error_config 17; fi
$AppliCfg xmlval -b $flash_layout_bin -b_el_idx 18 -nxml_el_idx "Flash Layout configuration index" -n "S Module 4 size" $xml_config_gen --vb
if [ $? -ne 0 ]; then error_config 18; fi
$AppliCfg xmlval -b $flash_layout_bin -b_el_idx 19 -nxml_el_idx "Flash Layout configuration index" -n "S Module 5 primary offset" $xml_config_gen --vb
if [ $? -ne 0 ]; then error_config 19; fi
$AppliCfg xmlval -b $flash_layout_bin -b_el_idx 20 -nxml_el_idx "Flash Layout configuration index" -n "S Module 5 secondary offset" $xml_config_gen --vb
if [ $? -ne 0 ]; then error_config 20; fi
$AppliCfg xmlval -b $flash_layout_bin -b_el_idx 21 -nxml_el_idx "Flash Layout configuration index" -n "S Module 5 size" $xml_config_gen --vb
if [ $? -ne 0 ]; then error_config 21; fi
$AppliCfg xmlval -b $flash_layout_bin -b_el_idx 22 -nxml_el_idx "Flash Layout configuration index" -n "S Module 6 primary offset" $xml_config_gen --vb
if [ $? -ne 0 ]; then error_config 22; fi
$AppliCfg xmlval -b $flash_layout_bin -b_el_idx 23 -nxml_el_idx "Flash Layout configuration index" -n "S Module 6 secondary offset" $xml_config_gen --vb
if [ $? -ne 0 ]; then error_config 23; fi
$AppliCfg xmlval -b $flash_layout_bin -b_el_idx 24 -nxml_el_idx "Flash Layout configuration index" -n "S Module 6 size" $xml_config_gen --vb
if [ $? -ne 0 ]; then error_config 24; fi
$AppliCfg xmlval -b $flash_layout_bin -b_el_idx 25 -nxml_el_idx "Flash Layout configuration index" -n "S Module 7 primary offset" $xml_config_gen --vb
if [ $? -ne 0 ]; then error_config 25; fi
$AppliCfg xmlval -b $flash_layout_bin -b_el_idx 26 -nxml_el_idx "Flash Layout configuration index" -n "S Module 7 secondary offset" $xml_config_gen --vb
if [ $? -ne 0 ]; then error_config 26; fi
$AppliCfg xmlval -b $flash_layout_bin -b_el_idx 27 -nxml_el_idx "Flash Layout configuration index" -n "S Module 7 size" $xml_config_gen --vb
if [ $? -ne 0 ]; then error_config 27; fi
$AppliCfg xmlval -b $flash_layout_bin -b_el_idx 28 -nxml_el_idx "Flash Layout configuration index" -n "NS appli primary offset" $xml_config_gen --vb
if [ $? -ne 0 ]; then error_config 28; fi
$AppliCfg xmlval -b $flash_layout_bin -b_el_idx 29 -nxml_el_idx "Flash Layout configuration index" -n "NS appli secondary offset" -nxml "NS reserved area size" -e "val1+(val2/2)" -cond "'val2>=0 and (val2 %% 2) == 0'" $xml_config_gen --vb
if [ $? -ne 0 ]; then error_config 29; fi
$AppliCfg xmlval -b $flash_layout_bin -b_el_idx 30 -nxml_el_idx "Flash Layout configuration index" -n "NS appli size" -nxml "NS reserved area size" -e "val1-(val2/2)" -cond "'val2>=0 and (val2 %% 2) == 0'"  $xml_config_gen --vb
if [ $? -ne 0 ]; then error_config 30; fi
$AppliCfg xmlval -b $flash_layout_bin -b_el_idx 31 -nxml_el_idx "Flash Layout configuration index" -n "NS reserved area offset" -nxml "NS appli primary offset" -nxml "NS appli size" -e "val2 + val3"  $xml_config_gen --vb
if [ $? -ne 0 ]; then error_config 31; fi
$AppliCfg xmlval -b $flash_layout_bin -b_el_idx 33 -nxml_el_idx "Flash Layout configuration index" -n "ITS Factory offset"  $xml_config_gen --vb
if [ $? -ne 0 ]; then error_config 33; fi
$AppliCfg xmlval -b $flash_layout_bin -b_el_idx 34 -nxml_el_idx "Flash Layout configuration index" -n "ITS Factory size"  $xml_config_gen --vb
if [ $? -ne 0 ]; then error_config 34; fi
$AppliCfg xmlval -b $flash_layout_bin -b_el_idx 35 -nxml_el_idx "Flash Layout configuration index" -n "ITS offset"  $xml_config_gen --vb
if [ $? -ne 0 ]; then error_config 35; fi
$AppliCfg xmlval -b $flash_layout_bin -b_el_idx 36 -nxml_el_idx "Flash Layout configuration index" -n "ITS size"  $xml_config_gen --vb
if [ $? -ne 0 ]; then error_config 36; fi

